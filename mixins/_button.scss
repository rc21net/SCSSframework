@mixin a-button {
    &, &:active, &:focus, &:visited, &:hover {
        text-decoration: none;
        @content;
    }
}

@mixin button__size($height, $padding, $border-width, $border-radius) {
    @include a-button {
        height: $height;
        width: auto;
        box-sizing: border-box;
        padding: $padding;
        border: solid $border-width transparent;
        border-radius: $border-radius;
        text-align: center;
        display: inline-block;
        white-space: nowrap;
    }
}

/* deprecated
 * старые кнопки
 */

// Можно задать map со всеми цветами кнопок, например:
// $button-colors: (
//      colorName: (
//          color: (default: $white, hover: $white, active: $white),
//          background: (default: $orange, hover: $orange, active: $orange),
//          border: (default: $black, hover: $black, active: $black)
//      ),
//  ...
// );
// Потом запустить цикл:
// @each $color, $map in $button-colors {
//      .button-#{$color} {
//          @include buttonColor($map);
//      }
// }

// служебные
@mixin _buttonState($colors, $state) {
    $color: map_get($colors, 'color');
    $background: map_get($colors, 'background');
    $border: map_get($colors, 'border');

    color: map-get($color, $state) !important;
    background-color: map-get($background, $state) !important;
    border-color: map-get($border, $state) !important;
}

// Общий стиль кнопок
@mixin buttonType($font-face, $uppercase: false, $transition: none) {
    display: inline-block;
    box-sizing: border-box;
    font-family: $font-face;
    @if $uppercase {
        text-transform: uppercase;
    }
    @include transition($transition);
    &:hover {
        text-decoration: none;
        cursor: pointer;
    }
}

// Варианты расцветок
//
// $colors - map, пример:
// $color: (
//      color: (default: $white, hover: $white, active: $white),
//      background: (default: $orange, hover: $orange, active: $orange),
//      border: (default: $black, hover: $black, active: $black)
// );
@mixin buttonColor($colors) {
    @include _buttonState($colors, 'default');

    &:hover,
    &:focus,
    &.focus {
        @include _buttonState($colors, 'hover');
    }
    &:active,
    &.active {
        @include _buttonState($colors, 'active');
    }
    &.disabled,
    &[disabled] {
        &,
        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active {
            @include _buttonState($colors, 'default');
        }
    }
}

// Варианты размеров
@mixin buttonSize($height, $padding-horizontal, $font-size: $btn-font-size-base, $border-radius: $btn-border-radius-base, $border-size: $btn-border-size-base) {
    height: $height !important;
    line-height: $height - $border-size * 2 !important;
    padding: 0 $padding-horizontal !important;
    font-size: $font-size !important;
    border: $border-size solid !important;
    border-radius: $border-radius !important;
}
